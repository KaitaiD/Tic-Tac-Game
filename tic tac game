'''
PYTHON CODE FOR TIC TAC TOE GAME

'''

    
def piece_for_player(a):
    # output is the marker for the player 2
    d = {'x':'o','o':'x'}
    for a in d.keys():
        return d[a]

          
def game_decision(maplist,winlist):
    # Deciding if there is a winnder
    judging_len = [len(set(maplist).intersection(i)) for i in winlist]
    if 3 in judging_len:
         return 1
    elif (3 not in judging_len) and len(maplist)==5:
         return 2

def board_display(table):
    print(' {1} | {2} | {3} '.format(*table))
    print('-----------')
    print(' {4} | {5} | {6} '.format(*table))
    print('-----------')
    print(' {7} | {8} | {9} '.format(*table))
    
def replay():
    return input('Do you want to play again? Answer yes or no -->').lower().startswith('y')


# Check if the players are ready for the game
readiness = input('Are you ready to start the game? ') # Answer yes or no
print('\n')
print('Is he ready? --> ' + readiness)
print('\n')

while readiness.lower().startswith('y'):
    
    # Choose markers for players, it should be either x or o
    choice1 = input('Which piece do you want to choose? x or o? ')
    print('\n')
    print('The player 1 chooses --> ' + choice1)
    print('\n')
            
    choice2 = piece_for_player(choice1)
    
    print('The player 2 chooses --> ' + choice2)
    print('\n')
    print('Game is ON')
    print('\n')
    
    result = True
    num_of_steps = 0
    table = [' ']*10
    location_map1 = []
    location_map2 = []
    while result:
        # Display the game board        
        board_display(table)
        
        # Player 1 choose the location
        location1 = input('Player 1 decides to place the piece at ')

        if location1 not in location_map1:
            table[int(location1)] = choice1
        else:
            print('The location is already taken, choose another one')   
            
        location_map1.append(location1) 
        board_display(table)
        
        # The potential locations for victory
        # 1. All rows
        # 2. All columns
        # 3. Two diagonals
        winlist = [['1','2','3'],['4','5','6'],['7','8','9'],['1','4','7'],['2','5','8'],['3','6','9'],['1','5','9'],['3','5','7']]
        
        # The game result is either win, tie or keep going
        if game_decision(location_map1,winlist)==1:
            print('The game is over, Player 1 won')
            break
        elif game_decision(location_map1,winlist)==2:
            print('The game is tied')
            break
        else:
            pass
        
        
        # Player 2 choose the location
        location2 = input('Player 2 decides to place the piece at ')
        
        if location2 not in location_map2:
            table[int(location2)] = choice2
        else:
            print('The location is already taken, choose another one')
            
        location_map2.append(location2) 
        if game_decision(location_map2,winlist)==1:
            print('The game is over, Player 2 won')
            result= False
        elif game_decision(location_map2,winlist)==2:
            print('The game is tied')
            break
        else:
            pass

    # reset the table and locations for players
    table = [' ']*10 
    location_map1 = []
    location_map2 = []
    if not replay():
        break
while readiness.lower().startswith('n'):
    print('The contestant needs more time to prepare')
